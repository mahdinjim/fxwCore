--------Test Creds----------------

Admin creds in testing 
login: admin1
password: start123

-------End of test cred-------------

-----------Web service---------------

Create new admin :
Url : api/secret/once/create
method : post
message example:
{
    "email": "njimmahdi1@gmail.com",
    "login": "admin1",
    "password": "start123",
    "tel":21082206
}
Response 200 Ok => Admin Created Successfully 
Response 400 bad request => {"errors":[]}

-----------End of web service-----------------------------

--------Web service---------------------------

Authentificate 
Url :api/public/login
method post 
request message :
{
	"grant_type":"password",
	"password":"start123",
	"login":"admin1"
}
response message:
200 ok 
{
	admin: {
		username: "admin1"
		email: "njimmahdi1@gmail.com"
		tel: null
	}-
	token: {
		token: "3ea6df5d123ccf03cce0facf5647b0853164ec35"
		experationDate: {
		date: "2015-08-02 14:31:50.000000"
		timezone_type: 3
		timezone: "UTC"
	}-
	}-
}
Response 400 bad request => {"errors":[]}
Response 403 Forbidden => {"errors":[]}

-------End Webservice----------------------------------

--------Web service---------------------------
Update admin :
Url : api/private/super/admin/update
method : put
message example:
{
    "email": "njimmahdi1@gmail.com",
    "login": "admin1",
    "password": "start123",
    "tel":21082206
}
Response 200 Ok => Admin Updated Successfully 
Response 400 bad request => {"errors":[]}
--------End service---------------------------

--------Web service---------------------------
Create TeamLeader:
Url : api/private/super/teamleader/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "admin2",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile"
}
Response 200 Ok => TeamLeader created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Update TeamLeader:
Url : api/private/teamleader/update
method : put
message example:
{
	"id":1,
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "teamleader",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile",
	"description":"this is a nice leader"
}
Response 200 Ok => TeamLeader updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Delete TeamLeader
method delete 
url:api/private/super/teamleader/delete/1
Response 200 Ok => TeamLeader deleted successfully
Response 400 bad request 
--------End service---------------------------

--------Web service---------------------------
Get Team leader details
method get
url: /api/private/teamleader/profile/2
Response 200 ok
{"id":2,"username":"teamleader","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Get the list of all team leaders
method get
url api/private/super/teamleader/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"teamleader","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Create Developer:
Url : api/private/super/developer/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "developer",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile"
}
Response 200 Ok => Developer created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Update Developer:
Url : api/private/teamleader/update
method : put
message example:
{
    "id":1,
    "email": "njimmahdidev@gmail.com",
    "password": "start123",
    "login": "developer",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile",
    "description":"this is a nice dev"
}
Response 200 Ok => Developer updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Get the list of all developers
method get
url api/private/super/developer/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"developer","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Get Developer details
method get
url: /api/private/developer/profile/1
Response 200 ok
{"id":2,"username":"teamleader","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Delete TeamLeader
method delete 
url:api/private/super/developer/delete/1
Response 200 Ok => developer deleted successfully
Response 400 bad request 
--------End service---------------------------
--------Web service---------------------------
Create Tester:
Url : api/private/super/tester/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "tester",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile"
}
Response 200 Ok => Developer created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Update tester:
Url : api/private/tester/update
method : put
message example:
{
    "id":1,
    "email": "njimmahdidev@gmail.com",
    "password": "start123",
    "login": "tester",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile",
    "description":"this is a nice dev"
}
Response 200 Ok => tester updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Get the list of all testers
method get
url api/private/super/tester/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"developer","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Get Developer details
method get
url: /api/private/tester/profile/1
Response 200 ok
{"id":2,"username":"tester","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Delete tester
method delete 
url:api/private/super/tester/delete/1
Response 200 Ok => tester deleted successfully
Response 400 bad request 
--------End service---------------------------
--------Web service---------------------------
Create Designer:
Url : api/private/super/designer/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "designer",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile"
}
Response 200 Ok => designer created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Update designer:
Url : api/private/designer/update
method : put
message example:
{
    "id":1,
    "email": "njimmahdidev@gmail.com",
    "password": "start123",
    "login": "designer",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile",
    "description":"this is a nice dev"
}
Response 200 Ok => designer updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Get the list of all designer
method get
url api/private/super/designer/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"developer","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Get designer details
method get
url: /api/private/designer/profile/1
Response 200 ok
{"id":2,"username":"tester","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Delete designer
method delete 
url:api/private/super/designer/delete/1
Response 200 Ok => designer deleted successfully
Response 400 bad request 
--------End service---------------------------
--------Web service---------------------------
Create sysadmin:
Url : api/private/super/sysadmin/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "sysadmin",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile"
}
Response 200 Ok => sysadmin created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Update SystemAdmin:
Url : api/private/sysadmin/update
method : put
message example:
{
    "id":1,
    "email": "njimmahdidev@gmail.com",
    "password": "start123",
    "login": "sysadmin",
    "name": "M",
    "surname": "N",
    "capacity": "fulltime",
    "skills": "java,php,agile",
    "description":"this is a nice dev"
}
Response 200 Ok => sysadmin updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Get the list of all sysadmin
method get
url api/private/super/sysadmin/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"developer","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Get sysadmin details
method get
url: /api/private/sysadmin/profile/1
Response 200 ok
{"id":2,"username":"tester","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","capacity":"fulltime","skills":"java,php,agile","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Delete sysadmin
method delete 
url:api/private/super/sysadmin/delete/1
Response 200 Ok => sysadmin deleted successfully
Response 400 bad request 
--------End service---------------------------
--------Web service---------------------------
Create KeyAccount:
Url : api/private/super/keyaccount/create
method : post
message example:
{
    "email": "njimmahdi2@gmail.com",
    "password": "start123",
    "login": "keyaccount",
    "name": "M",
    "surname": "N"
}
Response 200 Ok => sysadmin created successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------
--------Web service---------------------------
Update keyaccount:
Url : api/private/keyaccount/update
method : put
message example:
{
    "id":1,
    "email": "njimmahdidev@gmail.com",
    "password": "start123",
    "login": "keyaccount",
    "name": "M",
    "surname": "N",
    "description":"this is a nice dev"
}
Response 200 Ok => keyaccount updated successfully
Response 400 bad request => {"errors":[]}

--------End service---------------------------

--------Web service---------------------------
Get the list of all keyaccount
method get
url api/private/super/keyaccount/all/1
Response 200 ok 
{"totalpages":1,"current_page":"1","users":[{"id":2,"username":"developer","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","description":null}]}
Response 400 bad request
--------End service---------------------------
--------Web service---------------------------
Get keyaccount details
method get
url: /api/private/keyaccount/profile/1
Response 200 ok
{"id":2,"username":"tester","email":"njimmahdi2@gmail.com","photo":null,"name":"M","surname":"N","description":null}
Response 400 bad request
--------End service---------------------------

--------Web service---------------------------
Delete keyaccount
method delete 
url:api/private/super/keyaccountkeyaccount/delete/1
Response 200 Ok => keyaccount deleted successfully
Response 400 bad request 
--------End service---------------------------